/* Container provides scrollable space */
.px-section {
  position: relative;
  height: 50vh; /* taller than viewport to show the effect while scrolling */
}

/* The sticky viewport pins while its parent scrolls past */
.px-viewport {
  position: sticky;
  top: 0;
  height: 50vh;
  overflow: hidden; /* hide the moving background overflow */
}

/* Background layer that moves slower than scroll content */
.px-layer {
  position: absolute;
  inset: 0;
  will-change: transform;
  transform: translateY(-30%);
}

/* The background image itself */
.px-bg {
  position: absolute;
  inset: -15vh 0; /* bleed image outside to avoid edges showing */
  background-image: url("../assets/img/service.png");
  background-size: cover;
  background-position: center;
  filter: brightness(.8);
  transform: translateZ(0); /* force GPU */
  height: 120vh; /* larger than viewport to cover during movement */
}

/* Foreground content sits above */
.px-content {
  position: relative;
  z-index: 1;
  display: grid;
  place-items: center;
  height: 50vh;
  text-align: center;
  color: #fff;
  padding: 0 1rem;
  text-shadow: 0 6px 24px rgba(0,0,0,.35);
}

.px-content h1 {
  font-size: clamp(2rem, 5vw, 4rem);
  margin: 0 0 .5rem;
}
.px-content p {
  font-size: clamp(1rem, 2.2vw, 1.25rem);
  margin: 0;
}

/* Optional: add subtle motion on scroll with CSS only (no JS)
   by animating layer position relative to parent height */
.px-section {
  --depth: 50vh;  /* tweak for stronger/weaker effect */
}
.px-layer {
  /* This uses viewport units; for even smoother control add tiny JS to map scroll to translateY */
  animation: pxFloat linear both;
  animation-timeline: scroll();
  animation-range: 0 100%;
}
@keyframes pxFloat {
  from { transform: translateY(0%); }
  to   { transform: translateY(var(--depth)); }
}
